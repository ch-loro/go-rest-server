swagger: "2.0"
info:
  title: sample
  description: Golang Server API
  version: 1.0.0
  license:
    name: MIT
host: localhost:8000
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /entry:
    post:
      summary: Enter a chat room
  /postmsg:
    post:
      summary: Post a text message
  /postimg:
    post:
      summary: Post an image file
  /like:
    post:
      summary: Like a post

  /gettimetile:
    get:
      summary: Get all messages on timeline
  /getmsg:
    get:
      summary: Get a text message
  /getmsg:
    get:
      summary: Get a image file
  /getusers:
    get:
      summary: Get users in the chat room


  /gettest:
    get:
      summary: for Get API test
      operationId: gettest
      tags:
        - gettest
      parameters:
        - name: num
          description: any number
          in: query
          required: false
          type: integer
          format: int32
        - name: str
          description: any string
          in: query
          required: false
          type: string
        - name: enum
          description: any enum
          in: query
          required: false
          type: string
          enum:
            - foo
            - bar
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: "#/definitions/Obj"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /posttest:
    post:
      summary: for Post API test
      operationId: posttest
      tags:
        - posttest
      parameters:
        - name: num
          description: any number
          in: query
          required: false
          type: integer
          format: int32
        - name: str
          description: any string
          in: query
          required: false
          type: string
        - name: enum
          description: any enum
          in: query
          required: false
          type: string
          enum:
            - foo
            - bar
      responses:
        200:
          description: none
        201:
          description: over
        400:
          description: Unavailable values
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
definitions:
  Obj:
    type: object
    required:
      - id
      - name
      - value
    properties:
      id:
        type: integer
      name:
        type: string
      value:
        type: string
        enum:
          - foo
          - bar
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
